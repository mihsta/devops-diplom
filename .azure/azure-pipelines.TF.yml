#https://thomasthornton.cloud/2020/11/02/deploying-terraform-using-azure-devops-with-build-artifacts/

stages:
- stage: CI_TF
  displayName: CI_TF

  jobs:  
  - job: Terraforming
    steps:

    - task: TerraformInstaller@0
      displayName: 'Install Terraform latest'        
      inputs:
        terraformVersion: 'latest'
    - task: replacetokens@4
      inputs:
        targetFiles: '*.tf*'
        rootDirectory: 'iac/terraform'
        escapeType: none
        tokenPrefix: '__'
        tokenSuffix: '__'
    - task: CmdLine@2
      inputs:
        script: |
          export TF_VAR_appId=$(appid)
          export TF_VAR_password=""
    - task: TerraformTaskV2@2
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: 'iac/terraform'
        backendServiceArm: 'ProductionSubscription(e7d25b87-6206-43f1-8056-f55fb43d9548)'
        backendAzureRmResourceGroupName: 'rg-terraformstate'
        backendAzureRmStorageAccountName: 'terrastatestorage5533'
        backendAzureRmContainerName: 'terraformstate'
        backendAzureRmKey: 'testimport.terraform.tfstate'

    - task: TerraformTaskV2@2
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: 'iac/terraform'
        environmentServiceNameAzureRM: 'ProductionSubscription(e7d25b87-6206-43f1-8056-f55fb43d9548)'
    
    - task: TerraformTaskV2@2
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: 'iac/terraform'
        commandOptions: '-auto-approve'
        environmentServiceNameAzureRM: 'ProductionSubscription(e7d25b87-6206-43f1-8056-f55fb43d9548)'

